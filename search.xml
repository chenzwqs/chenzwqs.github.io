<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>盐城一日游</title>
      <link href="/2024/08/01/%E7%9B%90%E5%9F%8E%E4%B8%80%E6%97%A5%E6%B8%B8/"/>
      <url>/2024/08/01/%E7%9B%90%E5%9F%8E%E4%B8%80%E6%97%A5%E6%B8%B8/</url>
      
        <content type="html"><![CDATA[<!-- 一言API --><blockquote><p id="hitokoto"></p></blockquote><script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer></script>]]></content>
      
      
      <categories>
          
          <category> 旅行 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>一言（hitokoto）API使用</title>
      <link href="/2022/08/24/%E4%B8%80%E8%A8%80%EF%BC%88hitokoto%EF%BC%89API%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/08/24/%E4%B8%80%E8%A8%80%EF%BC%88hitokoto%EF%BC%89API%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>☞ <a href="https://hitokoto.cn/">前往 Hitokoto 官网 ╰(￣ω￣ｏ)</a></p><h1 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h1><ul><li><a href="https://v1.hitokoto.cn/">https://v1.hitokoto.cn/</a> 从7种分类中随机抽取）</li><li><a href="https://v1.hitokoto.cn/?c=b">https://v1.hitokoto.cn/?c=b</a> （请求获得一个分类是漫画的句子）</li><li><a href="https://v1.hitokoto.cn/?c=f&amp;encode=text">https://v1.hitokoto.cn/?c=f&amp;encode=text</a> （请求获得一个来自网络的句子，并以纯文本格式输出）</li></ul><p><strong>新 API 方法， 十分简洁：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;hitokoto&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto&quot;</span> <span class="attr">defer</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>现代写法，推荐(不支持 IE)：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">fetch</span>(<span class="string">&#x27;https://v1.hitokoto.cn&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span></span><br><span class="line"><span class="language-javascript">    .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> hitokoto = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;hitokoto_text&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      hitokoto.<span class="property">href</span> = <span class="string">&#x27;https://hitokoto.cn/?uuid=&#x27;</span> + data.<span class="property">uuid</span></span></span><br><span class="line"><span class="language-javascript">      hitokoto.<span class="property">innerText</span> = data.<span class="property">hitokoto</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    .<span class="title function_">catch</span>(<span class="variable language_">console</span>.<span class="property">error</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>老式写法，兼容性最好; 支持 IE：</strong> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">  xhr.<span class="title function_">open</span>(<span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;https://v1.hitokoto.cn&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (xhr.<span class="property">readyState</span> === <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">responseText</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> hitokoto = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;hitokoto_text&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">      hitokoto.<span class="property">href</span> = <span class="string">&#x27;https://hitokoto.cn/?uuid=&#x27;</span> + data.<span class="property">uuid</span></span></span><br><span class="line"><span class="language-javascript">      hitokoto.<span class="property">innerText</span> = data.<span class="property">hitokoto</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  xhr.<span class="title function_">send</span>();</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="请求参数"><a href="#请求参数" class="headerlink" title="请求参数"></a>请求参数</h1><table><thead><tr><th align="left">参数</th><th align="left">值</th><th align="left">可选</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">c</td><td align="left">见后表</td><td align="left">是</td><td align="left">句子类型</td></tr><tr><td align="left">encode</td><td align="left">见后表</td><td align="left">是</td><td align="left">返回编码</td></tr><tr><td align="left">charset</td><td align="left">见后表</td><td align="left">是</td><td align="left">字符集</td></tr><tr><td align="left">callback</td><td align="left">如：moe</td><td align="left">是</td><td align="left">调用的异步函数</td></tr><tr><td align="left">select</td><td align="left">默认：.hitokoto</td><td align="left">是</td><td align="left">选择器。配合 encode=js 使用</td></tr><tr><td align="left">min_length</td><td align="left">默认：0</td><td align="left">是</td><td align="left">返回句子的最小长度（包含）</td></tr><tr><td align="left">max_length</td><td align="left">默认：30</td><td align="left">是</td><td align="left">返回句子的最大长度（包含）</td></tr></tbody></table><h2 id="句子类型（参数）"><a href="#句子类型（参数）" class="headerlink" title="句子类型（参数）"></a>句子类型（参数）</h2><table><thead><tr><th align="left">参数</th><th align="left">说明</th><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">a</td><td align="left">动画</td><td align="left">g</td><td align="left">其他</td></tr><tr><td align="left">b</td><td align="left">漫画</td><td align="left">h</td><td align="left">影视</td></tr><tr><td align="left">c</td><td align="left">游戏</td><td align="left">i</td><td align="left">诗词</td></tr><tr><td align="left">d</td><td align="left">文学</td><td align="left">j</td><td align="left">网易云</td></tr><tr><td align="left">e</td><td align="left">原创</td><td align="left">k</td><td align="left">哲学</td></tr><tr><td align="left">f</td><td align="left">来自网络</td><td align="left">l</td><td align="left">抖机灵</td></tr></tbody></table><p>其他参数作为 动画 类型处理<br>可选择多个分类，例如： <code>?c=a&amp;c=c</code></p><h2 id="返回编码（参数）"><a href="#返回编码（参数）" class="headerlink" title="返回编码（参数）"></a>返回编码（参数）</h2><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">text</td><td align="left">返回纯洁文本</td></tr><tr><td align="left">json</td><td align="left">返回格式化后的 JSON 文本</td></tr><tr><td align="left">js</td><td align="left">返回指定选择器的同步调用函数。默认选择器为：.hitokoto</td></tr><tr><td align="left">其他</td><td align="left">返回格式化后的 JSON 文本</td></tr></tbody></table><h2 id="字符集（参数）"><a href="#字符集（参数）" class="headerlink" title="字符集（参数）"></a>字符集（参数）</h2><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">utf-8</td><td align="left">返回 utf-8 编码的内容</td></tr><tr><td align="left">gbk</td><td align="left">返回 gbk 编码的内容。不支持与异步函数同用</td></tr><tr><td align="left">其他</td><td align="left">返回 utf-8 编码的内容</td></tr></tbody></table><h1 id="返回格式"><a href="#返回格式" class="headerlink" title="返回格式"></a>返回格式</h1><table><thead><tr><th align="left">返回参数名称</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">一言标识</td></tr><tr><td align="left">hitokoto</td><td align="left">一言正文。编码方式 unicode。使用 utf-8。</td></tr><tr><td align="left">type</td><td align="left">类型。请参考第三节参数的表格</td></tr><tr><td align="left">from</td><td align="left">一言的出处</td></tr><tr><td align="left">from_who</td><td align="left">一言的作者</td></tr><tr><td align="left">creator</td><td align="left">添加者</td></tr><tr><td align="left">creator_uid</td><td align="left">添加者用户标识</td></tr><tr><td align="left">reviewer</td><td align="left">审核员标识</td></tr><tr><td align="left">uuid</td><td align="left">一言唯一标识；可以链接到 <a href="https://hitokoto.cn/?uuid=%5Buuid%5D">https://hitokoto.cn?uuid=[uuid]</a> 查看这个一言的完整信息</td></tr><tr><td align="left">commit_from</td><td align="left">提交方式</td></tr><tr><td align="left">created_at</td><td align="left">添加时间</td></tr><tr><td align="left">length</td><td align="left">句子长度</td></tr></tbody></table><!-- 一言API --><blockquote><p id="hitokoto"></p></blockquote><script src="https://v1.hitokoto.cn/?c=d&encode=js&select=%23hitokoto" defer></script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+GitHub搭建博客</title>
      <link href="/2022/06/17/hexo+github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/06/17/hexo+github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<!--以下为正文内容--><p>默认一路没出错，报错自行百度</p><h1 id="安装-Node-js和Git"><a href="#安装-Node-js和Git" class="headerlink" title="安装 Node.js和Git"></a>安装 Node.js和Git</h1><p>Node.js官网：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a><br>Git官网：<a href="https://git-scm.com/">https://git-scm.com/</a><br>按默认配置下载安装即可</p><h1 id="一、GitHub准备工作"><a href="#一、GitHub准备工作" class="headerlink" title="一、GitHub准备工作"></a>一、GitHub准备工作</h1><h2 id="注册GitHub账户"><a href="#注册GitHub账户" class="headerlink" title="注册GitHub账户"></a>注册GitHub账户</h2><p>GitHub官网：<a href="https://github.com/">https://github.com/</a></p><h2 id="创建-GitHub-Pages-仓库"><a href="#创建-GitHub-Pages-仓库" class="headerlink" title="创建 GitHub Pages 仓库"></a>创建 GitHub Pages 仓库</h2><p><img src="https://preview.cloud.189.cn/image/imageAction?param=25410CEDE788382A4EE59AD920A327004EAB691795FE2CB451CCA2232C9F216AC681092D9EB84398DDA22FC63AC1401B9F2E471ED658D70E9C8BEE214648822BFBC7A08FD8F258A35B66FBB2570FC902B40CAD0A196ECF661C5287F3763A76E90DDC25AE1209A58DD0DB5A9D10B55537"></p><p><img src="https://preview.cloud.189.cn/image/imageAction?param=6CCB8F636D352CA26D7E5834D9EAA15D6BA4B3CC7D6C460C64D8A74CCFDC4384632F709C42F0F15A222546DD95E2EFC1589B3777C4DC85F27423B5452F93811C260FDB657F03CE142AAFCC8C1942775AA586466223D4C28FC9D29E623F918EAA38FA88166BCF0CA405C1B4DA9BB590EF"></p><h2 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h2><p>右键打开Git Bash Here，复制粘贴下面的命令，用于 Git 提交时的身份识别</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;&lt;注册 GitHub 的用户名&gt;&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;&lt;注册 GitHub 的邮箱&gt;&quot;</span><br></pre></td></tr></table></figure><p>输入下面命令并一直按回车，用于生成SSH keys</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;&lt;注册 GitHub 的邮箱&gt;&quot;</span><br></pre></td></tr></table></figure><p>输入下面命令查看公钥内容，cat后内容为公钥存储路径，可以在上一个命令输出内容中找到，<br>例如“Your public key has been saved in <strong>/C/Users/Administrator/.ssh/id_rsa.pub</strong>”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /C/Users/Administrator/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>复制输出的公钥，打开GitHub设置（点击自己的头像，选择Settings）<br>选择左边栏的 SSH and GPG keys，点击 New SSH key,<br>Title随意取名，将复制的公钥粘贴到Key中，点击Add SSH key</p><h1 id="二、在本地搭建Hexo"><a href="#二、在本地搭建Hexo" class="headerlink" title="二、在本地搭建Hexo"></a>二、在本地搭建Hexo</h1><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>新建一个文件夹（无中文路径，例 D:\MyBlog），在新建的文件夹中右键选择Git Bash Here打开,复制粘贴下面的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli  # 安装 hexo</span><br><span class="line">hexo init                # 初始化</span><br><span class="line">npm install              # 安装 hexo 依赖</span><br></pre></td></tr></table></figure><p>安装时间较久，请耐心等待，完成后复制粘贴下面的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g &amp;&amp; hexo s  # 生成页面并启动服务器</span><br></pre></td></tr></table></figure><p>完成后最后一行显示如下</p><p><img src="https://preview.cloud.189.cn/image/imageAction?param=4082E82189E168532789E2149FC1C915C752140D0432B28060306FB1BE9E192CFA4E110B2A0E0E524AB269BB7B0877A6D94CFC3F02B1206A0BF5B10B288F4EADBD48D10D4991F875BC8213768DB4DD7429A9EA7AACF16C333123E93C6E221C446837DC3E25E6B0F3262F5D21388A0F6E"></p><p>此时在浏览器中输入网址 <a href="http://localhost:4000/">http://localhost:4000</a> ，即可查看博客在本地的效果，这时候使用的是默认主题，ctrl+c即关闭服务器。</p><p>注：如果页面无法加载，可能是端口被占用。关闭服务器后，运行 hexo server -p 5000 更改端口号后重试。</p><h2 id="更换-Hexo-主题"><a href="#更换-Hexo-主题" class="headerlink" title="更换 Hexo 主题"></a>更换 Hexo 主题</h2><p>首先找一个好看的主题<br>可以在hexo官网中寻找： <a href="https://hexo.io/themes/">https://hexo.io/themes/</a><br>或者在GitHub中搜索： <a href="https://github.com/search?q=hexo-theme">https://github.com/search?q=hexo-theme</a> </p><p>在GitHub主页获取主题的&lt;仓库地址&gt;</p><p><img src="https://preview.cloud.189.cn/image/imageAction?param=F97B8FE6C771F6008A6DD9129E1E33FD1F860F1E178E683E734517107A55574CE4A25D424F7740578A391DF12A347398727E7B779B5CB22B6DC2D68A694AB469F97F54EAC4D17AD907D8BE22DB4052BD1D2B1C28D1F0BF14817E93FAA84A2E77081E4F575F79105C08EB7B22E5E60199"></p><p>在 Hexo 博客根目录（即一开始创建的文件夹，例 D:\MyBlog）中，右键，选择Git Bash Here，执行下面命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone &lt;仓库地址&gt; themes/&lt;主题名&gt;  # 下载主题 </span><br></pre></td></tr></table></figure><p>此时用编辑器打开博客根目录下的 _config.yml文件 (例 D:\MyBlog\ _config.yml)，在末尾找到theme: landscape，将landscape改为要更换的主题名字，然后执行启动命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g &amp;&amp; hexo s  # 生成页面并启动服务器</span><br></pre></td></tr></table></figure><p>再在浏览器中输入网址 <a href="http://localhost:4000/">http://localhost:4000</a> ，现在显示的便是更换后的主题。</p><h2 id="修改主题配置"><a href="#修改主题配置" class="headerlink" title="修改主题配置"></a>修改主题配置</h2><p>自行参考Hexo官方文档 <a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a> 与使用的主题GitHub主页的说明</p><h1 id="三、将博客部署到GitHub"><a href="#三、将博客部署到GitHub" class="headerlink" title="三、将博客部署到GitHub"></a>三、将博客部署到GitHub</h1><h2 id="发布准备"><a href="#发布准备" class="headerlink" title="发布准备"></a>发布准备</h2><p>在博客根目录下，右键打开Git Bash Here，输入下面命令，用于安装插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure><p>编辑博客根目录_config.yaml文件(例D:\MyBlog\ _config.yml)，在末尾添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:&lt;用户名&gt;/&lt;用户名&gt;.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><p>输入下面命令生成页面并部署到GitHub</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g &amp;&amp; hexo d </span><br></pre></td></tr></table></figure><p>在浏览器中输入网址 https://&lt;用户名&gt;.github.io 即可</p><!-- 一言API --><blockquote><p id="hitokoto"></p></blockquote><script src="https://v1.hitokoto.cn/?c=d&encode=js&select=%23hitokoto" defer></script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
