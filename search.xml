<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一言（hitokoto）API使用</title>
      <link href="/2022/08/25/%E4%B8%80%E8%A8%80%EF%BC%88hitokoto%EF%BC%89API%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/08/25/%E4%B8%80%E8%A8%80%EF%BC%88hitokoto%EF%BC%89API%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h1><ul><li><a href="https://v1.hitokoto.cn/">https://v1.hitokoto.cn/</a> 从7种分类中随机抽取）</li><li><a href="https://v1.hitokoto.cn/?c=b">https://v1.hitokoto.cn/?c=b</a> （请求获得一个分类是漫画的句子）</li><li><a href="https://v1.hitokoto.cn/?c=f&amp;encode=text">https://v1.hitokoto.cn/?c=f&amp;encode=text</a> （请求获得一个来自网络的句子，并以纯文本格式输出）</li></ul><p><strong>新 API 方法， 十分简洁：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;p id=&quot;hitokoto&quot;&gt;&lt;/p&gt;</span><br><span class="line">&lt;script src=&quot;https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto&quot; defer&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>现代写法，推荐(不支持 IE)：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  fetch(&#x27;https://v1.hitokoto.cn&#x27;)</span><br><span class="line">    .then(response =&gt; response.json())</span><br><span class="line">    .then(data =&gt; &#123;</span><br><span class="line">      const hitokoto = document.getElementById(&#x27;hitokoto_text&#x27;)</span><br><span class="line">      hitokoto.href = &#x27;https://hitokoto.cn/?uuid=&#x27; + data.uuid</span><br><span class="line">      hitokoto.innerText = data.hitokoto</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(console.error)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>老式写法，兼容性最好; 支持 IE：</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  var xhr = new XMLHttpRequest();</span><br><span class="line">  xhr.open(&#x27;get&#x27;, &#x27;https://v1.hitokoto.cn&#x27;);</span><br><span class="line">  xhr.onreadystatechange = function () &#123;</span><br><span class="line">    if (xhr.readyState === 4) &#123;</span><br><span class="line">      var data = JSON.parse(xhr.responseText);</span><br><span class="line">      var hitokoto = document.getElementById(&#x27;hitokoto_text&#x27;);</span><br><span class="line">      hitokoto.href = &#x27;https://hitokoto.cn/?uuid=&#x27; + data.uuid</span><br><span class="line">      hitokoto.innerText = data.hitokoto;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  xhr.send();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="请求参数"><a href="#请求参数" class="headerlink" title="请求参数"></a>请求参数</h1><table><thead><tr><th align="left">参数</th><th align="left">值</th><th align="left">可选</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">c</td><td align="left">见后表</td><td align="left">是</td><td align="left">句子类型</td></tr><tr><td align="left">encode</td><td align="left">见后表</td><td align="left">是</td><td align="left">返回编码</td></tr><tr><td align="left">charset</td><td align="left">见后表</td><td align="left">是</td><td align="left">字符集</td></tr><tr><td align="left">callback</td><td align="left">如：moe</td><td align="left">是</td><td align="left">调用的异步函数</td></tr><tr><td align="left">select</td><td align="left">默认：.hitokoto</td><td align="left">是</td><td align="left">选择器。配合 encode=js 使用</td></tr><tr><td align="left">min_length</td><td align="left">默认：0</td><td align="left">是</td><td align="left">返回句子的最小长度（包含）</td></tr><tr><td align="left">max_length</td><td align="left">默认：30</td><td align="left">是</td><td align="left">返回句子的最大长度（包含）</td></tr></tbody></table><h2 id="句子类型（参数）"><a href="#句子类型（参数）" class="headerlink" title="句子类型（参数）"></a>句子类型（参数）</h2><table><thead><tr><th align="left">参数</th><th align="left">说明</th><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">a</td><td align="left">动画</td><td align="left">g</td><td align="left">其他</td></tr><tr><td align="left">b</td><td align="left">漫画</td><td align="left">h</td><td align="left">影视</td></tr><tr><td align="left">c</td><td align="left">游戏</td><td align="left">i</td><td align="left">诗词</td></tr><tr><td align="left">d</td><td align="left">文学</td><td align="left">j</td><td align="left">网易云</td></tr><tr><td align="left">e</td><td align="left">原创</td><td align="left">k</td><td align="left">哲学</td></tr><tr><td align="left">f</td><td align="left">来自网络</td><td align="left">l</td><td align="left">抖机灵</td></tr></tbody></table><p>其他参数作为 动画 类型处理<br>可选择多个分类，例如： <code>?c=a&amp;c=c</code></p><h2 id="返回编码（参数）"><a href="#返回编码（参数）" class="headerlink" title="返回编码（参数）"></a>返回编码（参数）</h2><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">text</td><td align="left">返回纯洁文本</td></tr><tr><td align="left">json</td><td align="left">返回格式化后的 JSON 文本</td></tr><tr><td align="left">js</td><td align="left">返回指定选择器的同步调用函数。默认选择器为：.hitokoto</td></tr><tr><td align="left">其他</td><td align="left">返回格式化后的 JSON 文本</td></tr></tbody></table><h2 id="字符集（参数）"><a href="#字符集（参数）" class="headerlink" title="字符集（参数）"></a>字符集（参数）</h2><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">utf-8</td><td align="left">返回 utf-8 编码的内容</td></tr><tr><td align="left">gbk</td><td align="left">返回 gbk 编码的内容。不支持与异步函数同用</td></tr><tr><td align="left">其他</td><td align="left">返回 utf-8 编码的内容</td></tr></tbody></table><h1 id="返回格式"><a href="#返回格式" class="headerlink" title="返回格式"></a>返回格式</h1><table><thead><tr><th align="left">返回参数名称</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">一言标识</td></tr><tr><td align="left">hitokoto</td><td align="left">一言正文。编码方式 unicode。使用 utf-8。</td></tr><tr><td align="left">type</td><td align="left">类型。请参考第三节参数的表格</td></tr><tr><td align="left">from</td><td align="left">一言的出处</td></tr><tr><td align="left">from_who</td><td align="left">一言的作者</td></tr><tr><td align="left">creator</td><td align="left">添加者</td></tr><tr><td align="left">creator_uid</td><td align="left">添加者用户标识</td></tr><tr><td align="left">reviewer</td><td align="left">审核员标识</td></tr><tr><td align="left">uuid</td><td align="left">一言唯一标识；可以链接到 <a href="https://hitokoto.cn/?uuid=%5Buuid%5D">https://hitokoto.cn?uuid=[uuid]</a> 查看这个一言的完整信息</td></tr><tr><td align="left">commit_from</td><td align="left">提交方式</td></tr><tr><td align="left">created_at</td><td align="left">添加时间</td></tr><tr><td align="left">length</td><td align="left">句子长度</td></tr></tbody></table><blockquote><p id="hitokoto"></p></blockquote><script src="https://v1.hitokoto.cn/?c=d&encode=js&select=%23hitokoto" defer></script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Tampermonkey（油猴脚本）</title>
      <link href="/2022/07/01/Tampermonkey%EF%BC%88%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%EF%BC%89/"/>
      <url>/2022/07/01/Tampermonkey%EF%BC%88%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><strong>Tampermonkey 是一款免费的浏览器扩展和最为流行的用户脚本管理器，它适用于 Chrome, Microsoft Edge, Safari, Opera Next, 和 Firefox。</strong></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>1.打开tampermonkey扩展安装界面（<a href="https://microsoftedge.microsoft.com/addons/detail/tampermonkey/iikmkjmpaadaobahmlepeloendndfphd">传送门</a>）</p><p>2.点击获取进行安装</p><p><img src="https://preview.cloud.189.cn/image/imageAction?param=4D4B1B1AF8CDC821E3FBD266EF5C87B730CBEF10D50BB636033B8DB0E66386C51502542895F17B217309F7A18E26392EC967B287304BCB1CA711A3F17D9F2507D239B55F127818623CA8157B506EAF80DACA02B6B780F21193B92078B572FAF3342AD5AB899E57C7AE3466EBEA435E62"></p><h2 id="获取脚本"><a href="#获取脚本" class="headerlink" title="获取脚本"></a>获取脚本</h2><p>1.打开Greasy Fork脚本网站（<a href="https://greasyfork.org/zh-CN">传送门</a>）</p><p><img src="https://preview.cloud.189.cn/image/imageAction?param=22831907E63AB04BDF5AC1CC467A8F1BA2DACC56A57375490BC26EA21A1D3A90A0FF87F76473E24816B817CD7E667361DBD4B18ED2662D5478E914EFABA8C463903BFBE187EE6DDBC9AEC9A835A126CA265E128E73114F0A8863349A761E8C23FE7426416CC30EB7AF62F8F867DEE7BC"></p><p>2.搜索需要的脚本</p><p>3.安装脚本</p><p><img src="https://preview.cloud.189.cn/image/imageAction?param=3701777021987C0185280821B6D512C54757F8DC6373749C140C0098D82C005FDD8094538B41B747DD284F29BE22021AD71A26AE54D6C411AD4F98A070436E4454A4F10E187B8F8F8B3A599D8EA13FBFD1025D9631B602C10D1DA44F91452B13F01FE679B6E8DDDAC1C86A8ECD56AEC6"></p><p>4.打开需要使用脚本的网站</p><p>5.脚本即可生效使用</p><blockquote><p id="hitokoto"></p></blockquote><script src="https://v1.hitokoto.cn/?c=d&encode=js&select=%23hitokoto" defer></script>]]></content>
      
      
      <categories>
          
          <category> Edge浏览器扩展 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>AdGuard 广告拦截器</title>
      <link href="/2022/07/01/AdGuard%E5%B9%BF%E5%91%8A%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
      <url>/2022/07/01/AdGuard%E5%B9%BF%E5%91%8A%E6%8B%A6%E6%88%AA%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p><strong>AdGuard 是快速的、小内存的广告拦截扩展，可高效拦截所有网页上的各种广告！选择所需的 AdGuard 浏览器扩展，您可进行无广告、快速、安全的浏览。</strong></p><p>1.打开AdGuard广告拦截器扩展安装界面（<a href="https://microsoftedge.microsoft.com/addons/detail/adguard-%E5%B9%BF%E5%91%8A%E6%8B%A6%E6%88%AA%E5%99%A8/pdffkfellgipmhklpdmokmckkkfcopbh">传送门</a>）</p><p>2.点击获取进行安装</p><p><img src="https://preview.cloud.189.cn/image/imageAction?param=DF1E7FC28159B5E9DAF1AB9F345C740820EF7A54A22D02C39F04E7346616DB7786BD238F33A1D2295A98B87C8640BAB3D189E191E057E51CCF8275782EB570E8AD0D6E369B62545C16739E3CFFD086F04CF503A850DC8967DF5ADE421B9A5517860DB1D43C47D1A035F38B918DC1EE70"></p><p>3.在弹出的配置 AdGuard 扩展页面中打开前四个设置</p><p><img src="https://preview.cloud.189.cn/image/imageAction?param=358DAD3048CA16F604CAD8E705326514B3412D420EA303F69A6941D3B9DD701EB50C823BF6AE713E3EFC425BD57FCE51526FFA8BD2CC7984DBCA6E475E7F42E84DE34152CBEA006576A5F9DED6782E6D7E3026763E70AD9ECD7E2803C2B9D6DEA175D41B6F8E91B136C62DA0E91D7562"></p><blockquote><p id="hitokoto"></p></blockquote><script src="https://v1.hitokoto.cn/?c=d&encode=js&select=%23hitokoto" defer></script>]]></content>
      
      
      <categories>
          
          <category> Edge浏览器扩展 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+GitHub搭建博客</title>
      <link href="/2022/06/30/hexo+github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/06/30/hexo+github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<style>p { font: 14pt "仿宋" !important; }</style><p>默认一路没出错，报错自行百度</p><h1 id="安装-Node-js和Git"><a href="#安装-Node-js和Git" class="headerlink" title="安装 Node.js和Git"></a>安装 Node.js和Git</h1><p>Node.js官网：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a><br>Git官网：<a href="https://git-scm.com/">https://git-scm.com/</a><br>按默认配置下载安装即可</p><h1 id="一、GitHub准备工作"><a href="#一、GitHub准备工作" class="headerlink" title="一、GitHub准备工作"></a>一、GitHub准备工作</h1><h2 id="注册GitHub账户"><a href="#注册GitHub账户" class="headerlink" title="注册GitHub账户"></a>注册GitHub账户</h2><p>GitHub官网：<a href="https://github.com/">https://github.com/</a></p><h2 id="创建-GitHub-Pages-仓库"><a href="#创建-GitHub-Pages-仓库" class="headerlink" title="创建 GitHub Pages 仓库"></a>创建 GitHub Pages 仓库</h2><p><img src="https://preview.cloud.189.cn/image/imageAction?param=AB6FE08146F335AF30A54DCBAD809657E00289098BC2B8532ABFF8DD3237A9EF1D74CBA51F4FB3EC76AA96EAC36D5939766983D563028A6FAE89E2A2C21B272FAE2F55E3EBB6DAFF21D098416F45317E93E08F4CA6F3155838E62DB78A6B410539739E866DC9FFEA0EFD3B3344DD40C1"></p><p><img src="https://preview.cloud.189.cn/image/imageAction?param=18DD2A165B45CBFF3F87230B4E2A63F001A0784524DD8BBE245650F9660E150C11D1486019307415616D4ED6223340907EC781FED8DBE89508F6A706346423E4129898FB19B726005915E737FA3C7A6F94CD2A9EE020BFA05E185C9DBBE47A21D93852D4627C36A470DC5ACE1CCCD926"></p><h2 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h2><p>右键打开Git Bash Here，复制粘贴下面的命令，用于 Git 提交时的身份识别</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;&lt;注册 GitHub 的用户名&gt;&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;&lt;注册 GitHub 的邮箱&gt;&quot;</span><br></pre></td></tr></table></figure><p>输入下面命令并一直按回车，用于生成SSH keys</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;&lt;注册 GitHub 的邮箱&gt;&quot;</span><br></pre></td></tr></table></figure><p>输入下面命令查看公钥内容，cat后内容为公钥存储路径，可以在上一个命令输出内容中找到，<br>例如“Your public key has been saved in <strong>/C/Users/Administrator/.ssh/id_rsa.pub</strong>”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /C/Users/Administrator/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>复制输出的公钥，打开GitHub设置（点击自己的头像，选择Settings）<br>选择左边栏的 SSH and GPG keys，点击 New SSH key,<br>Title随意取名，将复制的公钥粘贴到Key中，点击Add SSH key</p><h1 id="二、在本地搭建Hexo"><a href="#二、在本地搭建Hexo" class="headerlink" title="二、在本地搭建Hexo"></a>二、在本地搭建Hexo</h1><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>新建一个文件夹（无中文路径，例 D:\MyBlog），在新建的文件夹中右键选择Git Bash Here打开,复制粘贴下面的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli  # 安装 hexo</span><br><span class="line">hexo init                # 初始化</span><br><span class="line">npm install              # 安装 hexo 依赖</span><br></pre></td></tr></table></figure><p>安装时间较久，请耐心等待，完成后复制粘贴下面的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g &amp;&amp; hexo s  # 生成页面并启动服务器</span><br></pre></td></tr></table></figure><p>完成后最后一行显示如下</p><p><img src="https://preview.cloud.189.cn/image/imageAction?param=46B685A86A33D99B10960746937DF754EAA3175162120978A303AB75C7856815B492B87752E61370C153D1D805D0323BF70881C1F18DB87ADACC316932D143F511659A1614B325FB997E9257C496264426CD4CEA1E800DFBB39022ADFD2447CC56DFC08E3A82FC8E7AC3CC45BDA55236"></p><p>此时在浏览器中输入网址 <a href="http://localhost:4000/">http://localhost:4000</a> ，即可查看博客在本地的效果，这时候使用的是默认主题，ctrl+c即关闭服务器。</p><p>注：如果页面无法加载，可能是端口被占用。关闭服务器后，运行 hexo server -p 5000 更改端口号后重试。</p><h2 id="更换-Hexo-主题"><a href="#更换-Hexo-主题" class="headerlink" title="更换 Hexo 主题"></a>更换 Hexo 主题</h2><p>首先找一个好看的主题<br>可以在hexo官网中寻找： <a href="https://hexo.io/themes/">https://hexo.io/themes/</a><br>或者在GitHub中搜索： <a href="https://github.com/search?q=hexo-theme">https://github.com/search?q=hexo-theme</a> </p><p>在GitHub主页获取主题的&lt;仓库地址&gt;</p><p><img src="https://preview.cloud.189.cn/image/imageAction?param=0A937215097ADF91148546D75CED5B075AC5660D5D94854A6F42F5B99657772B5310BE7E8284F4072D9D582F4C020C1AA2773B21DBB9781C2AECDF3B8AECEC0C8C341B5A641AABDCDDCF0F2AA9BC2C4DDE6E460F3F0146A91B56720A89DBF3D38E6CD5765557598D970F9E70780CB024"></p><p>在 Hexo 博客根目录（即一开始创建的文件夹，例 D:\MyBlog）中，右键，选择Git Bash Here，执行下面命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone &lt;仓库地址&gt; themes/&lt;主题名&gt;  # 下载主题 </span><br></pre></td></tr></table></figure><p>此时用编辑器打开博客根目录下的 _config.yml文件 (例 D:\MyBlog\ _config.yml)，在末尾找到theme: landscape，将landscape改为要更换的主题名字，然后执行启动命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g &amp;&amp; hexo s  # 生成页面并启动服务器</span><br></pre></td></tr></table></figure><p>再在浏览器中输入网址 <a href="http://localhost:4000/">http://localhost:4000</a> ，现在显示的便是更换后的主题。</p><h2 id="修改主题配置"><a href="#修改主题配置" class="headerlink" title="修改主题配置"></a>修改主题配置</h2><p>自行参考Hexo官方文档 <a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a> 与使用的主题GitHub主页的说明</p><h1 id="三、将博客部署到GitHub"><a href="#三、将博客部署到GitHub" class="headerlink" title="三、将博客部署到GitHub"></a>三、将博客部署到GitHub</h1><h2 id="发布准备"><a href="#发布准备" class="headerlink" title="发布准备"></a>发布准备</h2><p>在博客根目录下，右键打开Git Bash Here，输入下面命令，用于安装插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure><p>编辑博客根目录_config.yaml文件(例D:\MyBlog\ _config.yml)，在末尾添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:&lt;用户名&gt;/&lt;用户名&gt;.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><p>输入下面命令生成页面并部署到GitHub</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g &amp;&amp; hexo d </span><br></pre></td></tr></table></figure><p>在浏览器中输入网址 https://&lt;用户名&gt;.github.io 即可</p><blockquote><p id="hitokoto"></p></blockquote><script src="https://v1.hitokoto.cn/?c=d&encode=js&select=%23hitokoto" defer></script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
